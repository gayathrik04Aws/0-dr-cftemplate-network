Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  Db2aCIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    Default: 172.32.1.0/24

  Db2bCIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
    Type: String
    Default: 172.32.2.0/24

  Db2cCIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the third Availability Zone
    Type: String
    Default: 172.32.4.0/24
  #Using existing riute table
  dbPublicRouteTable:
    Description: Please enter the routetableID
    Type: String
  #Created in ec2 network template
  vpnSecurityGroups:
    Description: Please enter the routetableID
    Type: String
  #Craeted in Ec2 network template
  sourceSecurityGroups:
    Description: Please enter the routetableID
    Type: String

Resources:
# # Create Subnets for 3 availability zones
  DbPublicSubnetuse2a:
      Type: AWS::EC2::Subnet
      Properties:
         VpcId:
           Fn::ImportValue: !Sub 'dr-sofe-prod-1-VPCID'
         AvailabilityZone: us-east-2a
         CidrBlock: !Ref Db2aCIDR
         MapPublicIpOnLaunch: true
         Tags:
          - Key: Name
            Value: Db2use2a-Public Subnet (AZ1)

  DbPublicSubnetuse2b:
      Type: AWS::EC2::Subnet
      Properties:
         VpcId:
          Fn::ImportValue: !Sub 'dr-sofe-prod-1-VPCID'
         AvailabilityZone: us-east-2b
         CidrBlock: !Ref Db2bCIDR
         MapPublicIpOnLaunch: true
         Tags:
          - Key: Name
            Value: Db2use2b-Public Subnet (AZ2)

  DbPublicSubnetuse2c:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
         Fn::ImportValue: !Sub 'dr-sofe-prod-1-VPCID'
        AvailabilityZone: us-east-2c
        CidrBlock: !Ref Db2cCIDR
        MapPublicIpOnLaunch: true
        Tags:
         - Key: Name
           Value: Db2use2c-Public Subnet (AZ3)

# SubnetRouteTableAssociation
  dbPublicSubnet2aRouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId:
         Fn::ImportValue: !Sub 'PublicRouteTable'
        SubnetId: !Ref DbPublicSubnetuse2a

  dbPublicSubnet2bRouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId:
          Fn::ImportValue: !Sub 'PublicRouteTable'
        SubnetId: !Ref DbPublicSubnetuse2b

  dbPublicSubnet2cRouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId:
          Fn::ImportValue: !Sub 'PublicRouteTable'
        SubnetId: !Ref DbPublicSubnetuse2c

  myDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: myDBSubnetGroup
      SubnetIds:
        - !Ref  DbPublicSubnetuse2a
        - !Ref  DbPublicSubnetuse2b
        - !Ref  DbPublicSubnetuse2c

# create security groups used
  dbAuroraSG:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: dbsecuritygroup
        VpcId:
          Fn::ImportValue: !Sub 'dr-sofe-prod-1-VPCID'
        SecurityGroupIngress:
          - CidrIp: 66.196.202.86/32
            Description: Custom TCP Rule
            FromPort: 3389
            IpProtocol: tcp
            ToPort: 3389
          - CidrIp: 172.31.1.0/24
            Description: Custom TCP Rule
            FromPort: 3389
            IpProtocol: tcp
            ToPort: 3389
          - CidrIp: 172.31.2.0/24
            Description: Custom TCP Rule
            FromPort: 3389
            IpProtocol: tcp
            ToPort: 3389
          - CidrIp: 172.31.3.0/24
            Description: Custom TCP Rule
            FromPort: 3389
            IpProtocol: tcp
            ToPort: 3389
          - CidrIp: 172.31.101.0/24
            Description: Custom TCP Rule
            FromPort: 3389
            IpProtocol: tcp
            ToPort: 3389
          - CidrIp: 172.31.102.0/24
            Description: Custom TCP Rule
            FromPort: 3389
            IpProtocol: tcp
            ToPort: 3389
          - CidrIp: 172.31.103.0/24
            Description: Custom TCP Rule
            FromPort: 3389
            IpProtocol: tcp
            ToPort: 3389
          - CidrIp: 209.163.175.50/32
            Description: Custom TCP Rule
            FromPort: 3389
            IpProtocol: tcp
            ToPort: 3389
          - CidrIp: 172.30.0.0/16
            Description: Custom TCP Rule
            FromPort: 3389
            IpProtocol: tcp
            ToPort: 3389
  dbElasticcachesg:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Elasticcache
        GroupName : sgElasticcache
        VpcId:
          Fn::ImportValue: !Sub 'dr-sofe-prod-1-VPCID'
        SecurityGroupIngress:
          - CidrIp: 0.0.0.0/0
            Description: tcp
            FromPort: 3306
            IpProtocol: tcp
            ToPort:   3306
  Marketing:
      Type: AWS::EC2::SecurityGroup
      Properties :
        GroupDescription: Marketing
        GroupName : sgMarketing
        VpcId:
          Fn::ImportValue: !Sub 'dr-sofe-prod-1-VPCID'
        SecurityGroupIngress:
          - CidrIp: 0.0.0.0/0
            Description: tcp
            FromPort: 3306
            IpProtocol: tcp
            ToPort:   3306

  # AuroraDBsg:
  #     Type: AWS::RDS::DBSecurityGroup
  #     Properties:
  #       EC2VpcId:
  #         Fn::ImportValue: !Sub 'dr-sofe-prod-1-VPCID'
  #       DBSecurityGroupIngress:
  #          -
  #            AuroraSG:
  #              !Ref dbAuroraSG
  #          -
  #            Elasticcachesg:
  #              !Ref dbElasticcachesg
  #          -
  #            Marketing:
  #               !Ref Marketing

  DrAllowCustompgAurora:
      Type: AWS::RDS::DBParameterGroup
      Properties:
        Description: CloudFormation Sample Parameter Group
        Family: aurora5.6

  DrAllowCustomcpgAurora:
      Type: AWS::RDS::DBClusterParameterGroup
      Properties:
        Parameters:
          character_set_database: "utf32"
        Description: CloudFormation Sample Parameter Group
        Family: aurora5.6
 # subnets 2a,2b,2c
Outputs:

  dbStackPublicSubnetEC2use2a:
      Description: Create Subnets for 3 availability zones
      Value: !Ref DbPublicSubnetuse2a
      Export:
        Name: !Sub "${AWS::StackName}-dbStackPublicSubnetEC2use2a"

  dbStackPublicSubnetEC2use2b:
      Description: Create Subnets for 3 availability zones
      Value: !Ref DbPublicSubnetuse2b
      Export:
        Name: !Sub "${AWS::StackName}-dbStackPublicSubnetEC2use2b"

  dbStackPublicSubnetEC2use2c:
      Description: Create Subnets for 3 availability zones
      Value: !Ref DbPublicSubnetuse2c
      Export:
        Name: !Sub "${AWS::StackName}-dbStackPublicSubnetEC2use2c"

#   # SecurityGroups
